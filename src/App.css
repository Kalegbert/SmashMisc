.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #0c0a0a;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #006c89;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

.avatar {
  border-radius: 50%;
}

.my-button {
  background-color: rgb(255, 255, 255);
  color: rgb(0, 0, 0);
  border-radius: 20px;
  border: 2px solid #000000;
  font-size: 15px;
  padding-left: 10px;
  padding-right: 10px;
}

.nice-border {
  border: 3px solid #ffffff;
  border-radius: 10px;
  padding: 0px;
  box-shadow: 0 0 8px rgba(25, 0, 255, 0.9);
  transition: transform 0.2s ease;
}

.nice-border:hover {
  transform: scale(1.03); /* Corrected for subtle zoom */
}

.image-button {
  background: none;
  border: none;
  padding: 0;
  cursor: pointer;
}

.seperate {
  width: 90%; /* Fluid width for responsiveness */
  max-width: 800px; /* Limits width on larger screens */
  margin: 0 auto; /* Centers the element */
}

.input-box {
  border: 2px solid red;
  border-radius: 20px;
}

.footer {
  text-align: center;
  width: 90%; /* Make width responsive */
  max-width: 300px; /* Limit max width for larger screens */
  padding: 5px;
  background-color: rgb(240, 255, 32);
  color: black;
  border-radius: 20px;
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 0 auto; /* Center the footer */
}

.button-caption {
  text-align: center;
  padding: 10px;
  margin: 5px;
  font-size: 18px;
  color: rgb(255, 255, 255);
}

.link-box-row {
  display: flex;
  justify-content: center;
  gap: 30px;
  flex-wrap: wrap; /* Allow items to wrap on smaller screens */
}

.top-right {
  position: fixed;
  top: 10px;
  right: 10px;
  margin-bottom: 10px;
  display: flex;
  gap: 10px;
  z-index: 1000;
}

.shuffle-button {
  background-color: rgb(255, 255, 255);
  color: rgb(0, 0, 0);
  border-radius: 20px;
  border: 2px solid #ffadad;
  font-size: 25px;
  padding-left: 10px;
  padding-right: 10px;
}

.vr {
  width: 2px;
  height: 100%;
  background-color: #ccc;
  margin: 0 20px;
  align-self: stretch;
}

.hover {
  transform: scale(1.08); /* subtle zoom on hover */
}

/* Updated .image-wrapper for responsiveness */
.image-wrapper {
  position: relative;
  cursor: pointer;
  transition: transform 0.2s ease;

  /* Mobile-first: Default for very small screens (e.g., 2 columns) */
  /* Calculation: (100% - (number_of_gaps * gap_size)) / number_of_columns */
  /* For 2 columns with 10px gap: (100% - (1 * 10px)) / 2 = (100% - 10px) / 2 */
  flex-basis: calc(50% - 5px); /* Ensures larger boxes on smallest screens */
  flex-grow: .1; /* Allow items to grow to fill available space */
  flex-shrink: 0; /* Prevent items from shrinking below their flex-basis */

  /* Maintain square aspect ratio based on the calculated width */
  padding-bottom: 100%; /* This ensures the height matches the width */
  height: 0; /* This is crucial for padding-bottom to define the height */
}

/* Media query for slightly larger mobile/small tablet screens (e.g., 3 columns) */
@media (min-width: 480px) {
  .image-wrapper {
    /* For 3 columns with 10px gap: (100% - (2 * 10px)) / 3 = (100% - 20px) / 3 */
    flex-basis: calc(33.33% - 6.67px);
  }
}

/* Media query for medium screens (e.g., 4 columns) */
@media (min-width: 640px) { /* Added new breakpoint */
  .image-wrapper {
    /* For 4 columns with 10px gap: (100% - (3 * 10px)) / 4 = (100% - 30px) / 4 */
    flex-basis: calc(25% - 7.5px);
  }
}

/* Styles for the actual image inside .image-wrapper */
.image-wrapper img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover; /* Ensures image fills the container, cropping if necessary */
}

.image-wrapper:hover {
  transform: scale(1.1);
}

/* Media query for larger screens (tablets and desktop) */
@media (min-width: 768px) { /* Adjust this breakpoint to match when you want fixed sizes */
  .image-wrapper {
    flex-basis: 100px; /* Fixed size for flex item */
    width: 100px; /* Ensure width is also fixed for consistency */
    height: 100px; /* Fixed height */
    padding-bottom: 0; /* Remove padding-bottom trick when fixed height is used */
  }
}
